
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.lang.String;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JComponent;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ABS
 */
public class DMWFrame extends javax.swing.JFrame {

    /**
     * Creates new form DMWFrame
     */
    static Connection conn = null;

    public DMWFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dists = new javax.swing.JList();
        records = new javax.swing.JSpinner();
        fname = new javax.swing.JCheckBox();
        lname = new javax.swing.JCheckBox();
        male = new javax.swing.JCheckBox();
        female = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        ageSlider = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        age = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        to = new javax.swing.JSlider();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 700));

        jLabel4.setText(" ");

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Ahmedabad", "Gandhinagar", "Mahesana", "Katchchh", "Banaskantha" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jTextField1.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        jTextField1.setText("First Name");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Shruti", 0, 14)); // NOI18N
        jTextField2.setText("Last Name");
        jTextField2.setEnabled(false);
        jTextField2.setName("lname"); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Last Name");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Gender");

        jCheckBox2.setText("Male");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Female");

        jLabel6.setText("Age to");

        jSlider1.setMaximum(111);
        jSlider1.setMinimum(18);
        jSlider1.setValue(18);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel2.setText("18");

        jLabel5.setText("111");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("100");

        jSlider2.setMaximum(112);
        jSlider2.setValue(112);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });

        jLabel15.setText("112");

        jLabel16.setText("Age From");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(jCheckBox1)
                        .addGap(101, 101, 101)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(jLabel7)
                        .addGap(253, 253, 253)
                        .addComponent(jLabel15)))
                .addGap(0, 1161, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addGap(61, 61, 61)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jCheckBox2)
                                .addGap(35, 35, 35)
                                .addComponent(jCheckBox3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(jLabel6)
                                .addGap(233, 233, 233)
                                .addComponent(jLabel16)))))
                .addContainerGap(1060, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel15))
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addGap(250, 250, 250))
        );

        jTabbedPane1.addTab("Advance Search", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dists.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Ahmedabad", "Gandhinagar", "Katchchh", "Mahesana", "Banaskantha" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(dists);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 48, 108, 112));

        records.setModel(new javax.swing.SpinnerNumberModel(10, 0, 30, 1));
        jPanel2.add(records, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 216, 61, 37));

        fname.setText("First Name");
        jPanel2.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 69, -1, -1));

        lname.setText("Last Name");
        jPanel2.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(377, 69, -1, -1));

        male.setText("Male");
        jPanel2.add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(522, 69, -1, -1));

        female.setText("Female");
        jPanel2.add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(637, 69, -1, -1));

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(441, 299, -1, -1));

        jLabel8.setText("No. of Records");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 227, -1, -1));

        ageSlider.setMaximum(111);
        ageSlider.setMinimum(18);
        ageSlider.setValue(18);
        ageSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ageSliderStateChanged(evt);
            }
        });
        jPanel2.add(ageSlider, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 130, -1, -1));

        jLabel9.setText("18");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 130, -1, -1));

        jLabel10.setText("100");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(579, 130, -1, -1));

        age.setText("18");
        jPanel2.add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, -1, -1));

        jLabel11.setText("select  attributes that you want to include in criteria");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 37, -1, -1));

        jLabel12.setText("Age To");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 110, -1, -1));

        jScrollPane2.setViewportView(table);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, -1, 190));

        to.setMaximum(112);
        to.setValue(112);
        to.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toStateChanged(evt);
            }
        });
        jPanel2.add(to, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, -1, -1));

        jLabel13.setText("112");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 160, -1, -1));

        jLabel14.setText("Age From");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 110, -1, -1));

        jTabbedPane1.addTab("Reports", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(205, 205, 205))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        /* Jcheckbox1 = Last Name
         Jcheckbox2 = Male
         Jcheckbox2 = Female
         JTextfield1 = first name
         JTextfield2 = Last name
         */
        //int selected []= jList1.getSelectedIndices();
        //String sel=(String)jList1.getSelectedValue();
        String fromTables[];
        if (jList1.isSelectionEmpty()) {
            //JOptionPane.showMessageDialog(this, "No District Selected");
            fromTables = new String[1];
            fromTables[0] = "combined";
        } else {
            int i = 0;
            ArrayList l = (ArrayList) jList1.getSelectedValuesList();
            fromTables = new String[l.size()];
            for (Object s : l) {
                //jLabel6.setText(jLabel6.getText() + s.toString().toLowerCase());
                fromTables[i++] = s.toString().toLowerCase();
            }
            //fromTables[(fromTables.length()-1)]="";
            //fromTables=fromTables.substring(0, fromTables.length()-1);

        }
        // for (int i = 0; i < fromTables.length; i++) {
        // JOptionPane.showMessageDialog(this, fromTables[i]);
        // }

        int total = 0;
        ResultSet rs = null;
        try {
            Statement st = conn.createStatement();
            String fname = jTextField1.getText();
            String q = "";
            String lname = ""; //1744 + 1533
            String age = String.valueOf(jSlider1.getValue());
            String ageTo = String.valueOf(jSlider2.getValue());
            lname = jTextField2.getText();
            if (jCheckBox1.isSelected() && !jCheckBox2.isSelected() && !jCheckBox3.isSelected()) {
                // Only Last Name
                //jLabel6.setText("Only last name");
                for (int i = 0; i < fromTables.length; i++) {
                    q = "Select count(*) as total from " + fromTables[i] + " where fname like '%" + fname + "%' and lname like '%" + lname + "%' and age between " + age + " and " + ageTo;
                    int cn = 0;
                    rs = st.executeQuery(q);
                    while (rs.next()) {
                        cn = rs.getInt("total");
                        total += cn;
                        // System.out.println("Record Count " + rs.getInt("total"));
                    }
                }
            } else if (jCheckBox1.isSelected() && jCheckBox2.isSelected() && !jCheckBox3.isSelected()) {
                //Only Male and Last Name
               // jLabel6.setText("Only male and last name");
                for (int i = 0; i < fromTables.length; i++) {
                    q = "Select count(*) as total from " + fromTables[i] + " where fname like '%" + fname + "%' and lname like '%" + lname + "%' and gender like 'male' and age between " + age + " and " + ageTo;;
                    int cn = 0;
                    rs = st.executeQuery(q);
                    while (rs.next()) {
                        cn = rs.getInt("total");
                        total += cn;
                        // System.out.println("Record Count " + rs.getInt("total"));
                    }
                }
            } else if (jCheckBox1.isSelected() && !jCheckBox2.isSelected() && jCheckBox3.isSelected()) {
                //Only Female and Last name
               // jLabel6.setText("Only Female and last name");
                for (int i = 0; i < fromTables.length; i++) {
                    q = "Select count(*) as total from " + fromTables[i] + " where fname like '%" + fname + "%' and lname like '%" + lname + "%' and gender like 'female' and age between " + age + " and " + ageTo;;
                    int cn = 0;
                    rs = st.executeQuery(q);
                    while (rs.next()) {
                        cn = rs.getInt("total");
                        total += cn;
                        // System.out.println("Record Count " + rs.getInt("total"));
                    }
                }
            } else if (!jCheckBox1.isSelected() && !jCheckBox2.isSelected() && jCheckBox3.isSelected()) {
                //Only female
                //jLabel6.setText("First name and female");
                for (int i = 0; i < fromTables.length; i++) {
                    q = "Select count(*) as total from " + fromTables[i] + " where fname like '%" + fname + "%' and gender like 'female' and age between " + age + " and " + ageTo;
                    int cn = 0;
                    rs = st.executeQuery(q);
                    while (rs.next()) {
                        cn = rs.getInt("total");
                        total += cn;
                        // System.out.println("Record Count " + rs.getInt("total"));
                    }
                }
            } else if (!jCheckBox1.isSelected() && jCheckBox2.isSelected() && jCheckBox3.isSelected()) {
                //Only Male,female
                //jLabel6.setText("male and female");
                for (int i = 0; i < fromTables.length; i++) {
                    q = "Select count(*) as total from " + fromTables[i] + " where fname like '%" + fname + "%'  and gender in ('male','female') and age between " + age + " and " + ageTo;
                    int cn = 0;
                    rs = st.executeQuery(q);
                    while (rs.next()) {
                        cn = rs.getInt("total");
                        total += cn;
                        // System.out.println("Record Count " + rs.getInt("total"));
                    }
                }
            }else if (!jCheckBox1.isSelected() && jCheckBox2.isSelected() && !jCheckBox3.isSelected()) {
                //Only Male
               // jLabel6.setText("Only male");
                for (int i = 0; i < fromTables.length; i++) {
                    q = "Select count(*) as total from " + fromTables[i] + " where fname like '%" + fname + "%' and gender like 'male' and age between " + age + " and " + ageTo;
                    int cn = 0;
                    rs = st.executeQuery(q);
                    while (rs.next()) {
                        cn = rs.getInt("total");
                        total += cn;
                        // System.out.println("Record Count " + rs.getInt("total"));
                    }
                }
            } else if (jCheckBox1.isSelected() && jCheckBox2.isSelected() && jCheckBox3.isSelected()) {
                //Only last name ,Male and female
                //jLabel6.setText("Only last name,male and female");
                for (int i = 0; i < fromTables.length; i++) {
                    q = "Select count(*) as total from " + fromTables[i] + " where fname like '%" + fname + "%' and lname like '%" + lname + "%' and gender in ('male','female') and age between " + age + " and " + ageTo;
                    int cn = 0;
                    rs = st.executeQuery(q);
                    while (rs.next()) {
                        cn = rs.getInt("total");
                        total += cn;
                        // System.out.println("Record Count " + rs.getInt("total"));
                    }
                }
            } else {
                //Only First name
               // jLabel6.setText("Only first name and age 18 to  " + age);
                for (int i = 0; i < fromTables.length; i++) {
                    q = "Select count(*) as total from " + fromTables[i] + " where fname like '%" + fname + "%' and age between " + age + " and " + ageTo;
                    int cn = 0;
                    rs = st.executeQuery(q);
                    while (rs.next()) {
                        cn = rs.getInt("total");
                        total += cn;
                        // System.out.println("Record Count " + rs.getInt("total"));
                    }
                }
            }
            JOptionPane.showMessageDialog(this, total);            
            /* rs = st.executeQuery(q);
             //System.out.println("Count : " + rs.getInt(1));
             //rs.next();
             int cn = 0;
             while (rs.next()) {
             cn = rs.getInt("total");
             System.out.println("Record Count " + rs.getInt("total"));
             }
             String cnt = cn + "  records found";
             JOptionPane.showMessageDialog(this, total);*/
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        jLabel7.setText(String.valueOf(jSlider1.getValue()));
        jSlider2.setMinimum(jSlider1.getValue()+1);
        jSlider2.setValue(jSlider1.getValue()+1);
        jLabel15.setText(String.valueOf(jSlider2.getValue()));
    }//GEN-LAST:event_jSlider1StateChanged

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        boolean flag = jCheckBox1.isSelected();
        String val = jTextField2.getText();
        if (flag) {
            if (val.equals("Last Name")) {
                jTextField2.setText("");
            }
            jTextField2.setEnabled(true);
        } else {
            jTextField2.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
        // TODO add your handling code here:
        String val = jTextField1.getText();
        if (val.equals("")) {
            //jTextField1.setText("First Name");
        }
    }//GEN-LAST:event_jTextField1FocusLost

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        String val = jTextField1.getText();
        if (val.equals("First Name")) {
            jTextField1.setText("");
        }
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void ageSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ageSliderStateChanged
        // TODO add your handling code here:
        age.setText(String.valueOf(ageSlider.getValue()));
        to.setMinimum(ageSlider.getValue() + 1);
        to.setValue(ageSlider.getValue() + 1);
        //jLabel9.setText(String.valueOf(jSlider1.getValue()));
        jLabel13.setText(String.valueOf(to.getValue()));
    }//GEN-LAST:event_ageSliderStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        if (!fname.isSelected() && !lname.isSelected() && !male.isSelected() && !female.isSelected()) {
            JOptionPane.showMessageDialog(this, "Please select atleast one of the criteria");
        } else {

            int selected[] = dists.getSelectedIndices();
            String d = " and dist in(";
            if (dists.isSelectionEmpty()) {
                d = " and dist in ('1','2','3','4','5')";
            } else {
                for (int i : selected) {
                    d = d + "'" + (i + 1) + "',";
                }
            }
            d = d.substring(0, d.length() - 1);
            d += ")";
            //JOptionPane.showMessageDialog(this, d);

            try {
                /*String fromTables[];
                 if (dists.isSelectionEmpty()) {
                 //JOptionPane.showMessageDialog(this, "No District Selected");
                 fromTables = new String[1];
                 fromTables[0] = "combined";
                 } else {
                 int i = 0;
                 ArrayList l = (ArrayList) dists.getSelectedValuesList();
                 fromTables = new String[l.size()];
                 for (Object s : l) {
                 //jLabel6.setText(jLabel6.getText() + s.toString().toLowerCase());
                 fromTables[i++] = s.toString().toLowerCase();
                 //JOptionPane.showMessageDialog(this, s);
                 }
                 }
                 int a[] = dists.getSelectedIndices();
                 for (int i = 0; i < a.length; i++) {
                 a[i] = a[i] + 1;
                 //JOptionPane.showMessageDialog(this, i);
                 }
                 for (int i : a) {
                 JOptionPane.showMessageDialog(this, i);
                 }*/
                int age = ageSlider.getValue();
                int toAge = to.getValue();
                int record = Integer.parseInt(String.valueOf(records.getValue()));
                //JOptionPane.showMessageDialog(this, "Age Ranges from 18 to  " + age + " top " + record);
                System.out.println("Records :-" + record);
                //JOptionPane.showMessageDialog(this,String.valueOf(records.getValue()));
                boolean fn = fname.isSelected();
                boolean ln = lname.isSelected();
                boolean ml = male.isSelected();
                boolean fl = female.isSelected();
                String SelectedColumns = "";
                String GroupByColumns = "";
                String whereCondition = "";
                int columnCount = 0;
                String q = "";
                if (fn && !ln && !ml && !fl) {
                    JOptionPane.showMessageDialog(this, "You selected only first name");
                    //SelectedColumns = "fname";
                    //GroupByColumns = "fname";
                    q = "select fname,count(*) from combined where age between " + age + " and " + toAge + d + " group by fname";
                    columnCount = 2;
                } else if (!fn && ln && !ml && !fl) {
                    JOptionPane.showMessageDialog(this, "You selected only last name ");
                    //SelectedColumns = "lname";
                    //GroupByColumns = "lname";
                    q = "select lname,count(*) from combined where age between " + age + " and " + toAge + d + " group by lname";
                    columnCount = 2;
                } else if (!fn && !ln && ml && !fl) {
                    JOptionPane.showMessageDialog(this, "You selected only Male");
                    //SelectedColumns = "gender";
                    //GroupByColumns = "gender";
                    //whereCondition = "and gender = 1";
                    q = "select fname,count(*) from combined where age between " + age + " and " + toAge + d + " and gender like 'male' group by fname";
                    columnCount = 2;
                } else if (!fn && !ln && !ml && fl) {
                    JOptionPane.showMessageDialog(this, "You selected only Female");
                    //SelectedColumns = "gender";
                    //GroupByColumns = "gender";
                    //whereCondition = "and gender = 0";
                    q = "select fname,count(*) from combined where age between " + age + " and " + toAge + d + " and gender like 'female' group by fname ";
                    columnCount = 2;
                } else if (fn && ln && !ml && !fl) {
                    JOptionPane.showMessageDialog(this, "You selected first and last name");
                    //SelectedColumns = "fname,lname";
                    //GroupByColumns = "fname,lname";
                    //whereCondition = "gender = 1";
                    q = "select fname,lname,count(*) from combined where age between " + age + " and " + toAge + d + " group by fname,lname";
                    columnCount = 3;
                } else if (fn && !ln && ml && !fl) {
                    JOptionPane.showMessageDialog(this, "You selected first name and Male");
                    //SelectedColumns = "fname";
                    //GroupByColumns = "fname";
                    //whereCondition = "gender = 1";
                    q = "select fname,gender,count(*) from combined where age between " + age + " and " + toAge + d + " and gender like 'male' group by fname";
                    columnCount = 3;
                } else if (fn && !ln && !ml && fl) {
                    JOptionPane.showMessageDialog(this, "You selected first name and Female");
                    q = "select fname,gender,count(*) from combined where age between " + age + " and " + toAge + d + " and gender like 'female' group by fname";
                    columnCount = 3;
                } else if (!fn && ln && ml && !fl) {
                    JOptionPane.showMessageDialog(this, "You selected last name and Male");
                    q = "select lname,gender,count(*) from combined where age between " + age + " and " + toAge + d + " and gender like 'male' group by lname";
                    columnCount = 3;
                } else if (!fn && ln && !ml && fl) {
                    JOptionPane.showMessageDialog(this, "You selected last name and Female");
                    q = "select lname,gender,count(*) from combined where age between " + age + " and " + toAge + d + " and gender like 'female' group by lname";
                    columnCount = 3;
                } else if (!fn && !ln && ml && fl) {
                    JOptionPane.showMessageDialog(this, "You selected Male and Female both");
                    q = "select fname,count(*) from combined where age between " + age + " and " + toAge + d;
                    columnCount = 2;
                } else if (fn && ln && ml && !fl) {
                    JOptionPane.showMessageDialog(this, "You selected first & last name and Male");
                    q = "select fname,lname,gender,count(*) from combined where age between " + age + " and " + toAge + d + " and gender like 'male' group by fname,lname";
                    columnCount = 4;
                } else if (fn && ln && !ml && fl) {
                    JOptionPane.showMessageDialog(this, "You selected first & last name and  Female");
                    q = "select fname,lname,gender,count(*) from combined where age between " + age + " and " + toAge + d + " and gender like 'female' group by fname,lname";
                    columnCount = 4;
                } else if (fn && !ln && ml && fl) {
                    JOptionPane.showMessageDialog(this, "You selected first name and Male & Female both");
                    q = "select fname,gender,count(*) from combined where age between " + age + " and " + toAge + d + " group by fname";
                    columnCount = 3;
                } else if (!fn && ln && ml && fl) {
                    JOptionPane.showMessageDialog(this, "You selected last name and Male & Female Both");
                    q = "select lname,gender,count(*) from combined where age between " + age + " and " + toAge + d + " group by lname";
                    columnCount = 3;
                } else if (fn && ln && ml && fl) {
                    JOptionPane.showMessageDialog(this, "You selected first & last name and Male & Female both");
                    q = "select fname,lname,gender,count(*) from combined where age between " + age + " and " + toAge + d + " group by fname,lname";
                    columnCount = 4;
                }
                String Fname = "";
                String Lname = "";
                String Age = "";
                String Gender = "";
                int count = 0;
                q += " order by " + columnCount + " desc limit 0," + record;
                //JOptionPane.showMessageDialog(this, q);
                System.out.println("Query : " + q);
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(q);
                ResultSetMetaData rsmd = rs.getMetaData();
                int NCols = rsmd.getColumnCount();
                boolean flag;
                int c = 1;
                DefaultTableModel dtm = new DefaultTableModel(null, new String[]{"", "", "", "Record Count"});;
                table.setModel(dtm);
                table.setFont(new java.awt.Font("shruti", Font.PLAIN, 14));
                while (rs.next()) {
                    c = 1;
                    if (fname.isSelected()) {
                        Fname = rs.getString(1);
                        c++;
                    }
                    if (lname.isSelected()) {
                        Lname = rs.getString(c);
                        c++;
                    }
                    if (male.isSelected() || female.isSelected()) {
                        Gender = rs.getString(c);
                        c++;
                    }
                    /*
                     if (male.isSelected()) {
                     Gender = "Male";
                     }
                     if (female.isSelected()) {
                     Gender = "Female";
                     }*/
                    count = rs.getInt(NCols);
                    //else if(flag)
                    //count=Integer.parseInt(rs.getString(columnCount));
                    //     Age = rs.getString(3);
                    //   Gender = rs.getString(4);
                    System.out.println("Fname : " + Fname + "Lname : " + Lname + " Age : " + Age + "Gender : " + Gender + " Count : " + count);
                    JTable jt = new JTable();
                    //table.setBounds(400,300,200,200);                    
                    dtm.addRow(new Object[]{Fname, Lname, Gender, count});
                    //JScrollPane jsp = new JScrollPane(table);
                    //jScrollPane2.setViewportView(table);                  
                }

            } catch (Exception ex) {
                Logger.getLogger(DMWFrame.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void toStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toStateChanged
        // TODO add your handling code here:
        jLabel13.setText(String.valueOf(to.getValue()));
    }//GEN-LAST:event_toStateChanged

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        // TODO add your handling code here:
        jLabel15.setText(String.valueOf(jSlider2.getValue()));
    }//GEN-LAST:event_jSlider2StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DMWFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DMWFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DMWFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DMWFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        connect();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DMWFrame().setVisible(true);
            }
        });
    }

    public static void connect() throws Exception {

        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/check?useUnicode=true&useEncodinhg=true&characterEncoding=utf8&characterSetResults=utf8", "root", "");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel age;
    private javax.swing.JSlider ageSlider;
    private javax.swing.JList dists;
    private javax.swing.JCheckBox female;
    private javax.swing.JCheckBox fname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JCheckBox lname;
    private javax.swing.JCheckBox male;
    private javax.swing.JSpinner records;
    private javax.swing.JTable table;
    private javax.swing.JSlider to;
    // End of variables declaration//GEN-END:variables
}
